substitutions:
  _TERRAFORM_IMAGE: 'hashicorp/terraform'
  _TERRAFORM_VERSION: 'latest'
  _GHE_CONFIG_PATH: 'non-prod'

timeout: '2700s'
logs_bucket: 'gs://project_code_samples'

steps:

# Debugging step to verify workspace layout
- id: 'debug-list'
  name: 'alpine'
  entrypoint: 'sh'
  args:
    - -c
    - |
      echo "=== Workspace contents ==="
      ls -R /workspace

# Confirm module path exists from working directory
- id: 'show-module-path'
  name: 'alpine'
  entrypoint: 'sh'
  args:
    - -c
    - |
      echo "Checking ../Terraform_modules from within ${_GHE_CONFIG_PATH}"
      ls ../Terraform_modules
  dir: '${_GHE_CONFIG_PATH}'

# Terraform init
- id: 'tf-init'
  name: '${_TERRAFORM_IMAGE}:${_TERRAFORM_VERSION}'
  args: ['init']
  dir: '${_GHE_CONFIG_PATH}'
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'

# Terraform format check
- id: 'tf-format'
  name: '${_TERRAFORM_IMAGE}:${_TERRAFORM_VERSION}'
  args: ['fmt', '-list=true', '-write=false', '-diff=true', '-check=true', '.']
  dir: '${_GHE_CONFIG_PATH}'
  waitFor: ['tf-init']

# Terraform validate
- id: 'tf-validate'
  name: '${_TERRAFORM_IMAGE}:${_TERRAFORM_VERSION}'
  args: ['validate']
  dir: '${_GHE_CONFIG_PATH}'
  waitFor: ['tf-init']

# Terraform plan
- id: 'tf-plan'
  name: '${_TERRAFORM_IMAGE}:${_TERRAFORM_VERSION}'
  args:
    - 'plan'
    - '-input=false'
    - '-lock=false'  # Remove in prod
  dir: '${_GHE_CONFIG_PATH}'
  env:
    - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
  waitFor: ['tf-validate']

# Checkov security scan
- id: 'checkov-scan'
  name: 'bridgecrew/checkov:latest'
  entrypoint: 'checkov'
  args: ['-d', '.']
  dir: '${_GHE_CONFIG_PATH}'
